name: Generate Documentation
description: |
  Create documentation for barman


inputs:
  docker-image:
    description: docker image to use. will build it if not provided or not find
    required: false

  barman-path:
    description: path for barman
    required: false
    default: barman

outputs:
  html:
    description: HTML documentation
    value: ${{ steps.set-artefacts.outputs.html }}
  pdf:
    description: PDF documentation
    value: ${{ steps.set-artefacts.outputs.pdf }}

runs:
  using: "composite"

  steps:
    - name: pull docker image
      id: pull-docker-image
      continue-on-error: true
      if: "inputs.docker-image"
      run: |
        docker pull ${{ inputs.docker-image }}
        echo "PANDOC_IMAGE=${{ inputs.docker-image }}" >> $GITHUB_ENV
      shell: bash
    - name: build docker image
      if: "!inputs.docker-image || steps.pull-docker-image.outcome == 'failure'"
      run: |
        docker build ${{ inputs.barman-path }}/doc -t barman-pandoc
        echo "PANDOC_IMAGE=barman-pandoc" >> $GITHUB_ENV
      shell: bash

    - name: build doc
      run: |
        cd ${{ inputs.barman-path }}/doc/build
        ./build
      shell: bash
      env:
        BASEDIR: ${{ inputs.barman-path }}
        PANDOC_IMAGE: ${{ env.PANDOC_IMAGE }}
    - name: check output
      run: |
        ls ${{ inputs.barman-path }}/doc/dist
      shell: bash
    - name: Upload pdf documentation
      uses: actions/upload-artifact@v3
      with:
        name: manual.pdf
        path: ${{ inputs.barman-path }}/doc/dist/manual.pdf
        if-no-files-found: error
    - name: remove PDF
      run: |
        rm  ${{ inputs.barman-path }}/doc/dist/manual.pdf
      shell: bash
    - name: Upload html documentation
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: ${{ inputs.barman-path }}/doc/dist
        if-no-files-found: error
    - name: define artefacts
      id: set-artefacts
      run: |
        echo "html=documentation" >> $GITHUB_OUTPUT
        echo "pdf=manual.pdf" >> $GITHUB_OUTPUT
      shell: bash
