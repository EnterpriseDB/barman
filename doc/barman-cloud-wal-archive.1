.\" Automatically generated by Pandoc 2.14.1
.\"
.TH "BARMAN-CLOUD-WAL-ARCHIVE" "1" "June 30, 2021" "Barman User manuals" "Version 2.12.1"
.hy
.SH NAME
.PP
barman-cloud-wal-archive - Archive PostgreSQL WAL files in the Cloud
using \f[C]archive_command\f[R]
.SH SYNOPSIS
.PP
barman-cloud-wal-archive [\f[I]OPTIONS\f[R]] \f[I]DESTINATION_URL\f[R]
\f[I]SERVER_NAME\f[R] \f[I]WAL_PATH\f[R]
.SH DESCRIPTION
.PP
This script can be used in the \f[C]archive_command\f[R] of a PostgreSQL
server to ship WAL files to the Cloud.
Currently AWS S3 and Azure Blob Storage are supported.
.PP
This script and Barman are administration tools for disaster recovery of
PostgreSQL servers written in Python and maintained by EnterpriseDB.
.SH POSITIONAL ARGUMENTS
.TP
DESTINATION_URL
URL of the cloud destination, such as a bucket in AWS S3.
For example: \f[C]s3://BUCKET_NAME/path/to/folder\f[R] (where
\f[C]BUCKET_NAME\f[R] is the bucket you have created in AWS).
.TP
SERVER_NAME
the name of the server as configured in Barman.
.TP
WAL_PATH
the value of the `%p' keyword (according to `archive_command').
.SH OPTIONS
.TP
-h, \[en]help
show a help message and exit
.TP
-V, \[en]version
show program\[cq]s version number and exit
.TP
-v, \[en]verbose
increase output verbosity (e.g., -vv is more than -v)
.TP
-q, \[en]quiet
decrease output verbosity (e.g., -qq is less than -q)
.TP
-t, \[en]test
test connectivity to the cloud destination and exit
.TP
-z, \[en]gzip
gzip-compress the WAL while uploading to the cloud
.TP
-j, \[en]bzip2
bzip2-compress the WAL while uploading to the cloud
.TP
\[en]cloud-provider {aws-s3,azure-blob-storage}
the cloud provider to which the backup should be uploaded
.TP
-P, \[en]profile
profile name (e.g.\ INI section in AWS credentials file)
.TP
\[en]endpoint-url
override the default S3 URL construction mechanism by specifying an
endpoint.
.TP
-e, \[en]encryption
the encryption algorithm used when storing the uploaded data in S3
Allowed values: `AES256'|`aws:kms'
.TP
\[en]encryption-scope
the name of an encryption scope defined in the Azure Blob Storage
service which is to be used to encrypt the data in Azure
.SH REFERENCES
.PP
For Boto:
.IP \[bu] 2
https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html
.PP
For AWS:
.IP \[bu] 2
http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-set-up.html
.IP \[bu] 2
http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html.
.PP
For Azure Blob Storage:
.IP \[bu] 2
https://docs.microsoft.com/en-us/azure/storage/blobs/authorize-data-operations-cli#set-environment-variables-for-authorization-parameters
.IP \[bu] 2
https://docs.microsoft.com/en-us/python/api/azure-storage-blob/?view=azure-python
.SH DEPENDENCIES
.PP
If using \f[C]--cloud-provider=aws-s3\f[R]:
.IP \[bu] 2
boto3
.PP
If using \f[C]--cloud-provider=azure-blob-storage\f[R]:
.IP \[bu] 2
azure-storage-blob
.IP \[bu] 2
azure-identity (optional, if you wish to use DefaultAzureCredential)
.SH EXIT STATUS
.TP
0
Success
.TP
Not zero
Failure
.SH SEE ALSO
.PP
This script can be used in conjunction with
\f[C]pre_archive_retry_script\f[R] to relay WAL files to S3, as follows:
.IP
.nf
\f[C]
pre_archive_retry_script = \[aq]barman-cloud-wal-archive [*OPTIONS*] *DESTINATION_URL* ${BARMAN_SERVER} ${BARMAN_FILE}\[aq]
\f[R]
.fi
.SH BUGS
.PP
Barman has been extensively tested, and is currently being used in
several production environments.
However, we cannot exclude the presence of bugs.
.PP
Any bug can be reported via the Github issue tracker.
.SH RESOURCES
.IP \[bu] 2
Homepage: <http://www.pgbarman.org/>
.IP \[bu] 2
Documentation: <http://docs.pgbarman.org/>
.IP \[bu] 2
Professional support: <http://www.enterprisedb.com/>
.SH COPYING
.PP
Barman is the property of EnterpriseDB UK Limited and its code is
distributed under GNU General Public License v3.
.PP
\[co] Copyright EnterpriseDB UK Limited 2011-2021
.SH AUTHORS
EnterpriseDB <http://www.enterprisedb.com>.
